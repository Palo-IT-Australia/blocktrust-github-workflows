name: Push docker registry secret to kubernetes

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      CLIENT:
        required: true
        type: string
      COMPANY:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      AZURE_CONTAINER_REGISTRY:
        required: true
        type: string
      AZURE_RESOURCE_GROUP:
        required: true
        type: string
      AZURE_CLUSTER_NAME:
        required: true
        type: string
      DOCKER_CONTAINER_NAME:
        required: true
        type: string
      K8S_NAMESPACE:
        required: true
        type: string
    secrets:
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true
      AZURE_CREDENTIALS:
        required: true

env:
  CLIENT: ${{ inputs.CLIENT }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  COMPANY: ${{ inputs.COMPANY }}
  PROJECT: ${{ inputs.PROJECT }}
  AZURE_CONTAINER_REGISTRY: ${{ inputs.AZURE_CONTAINER_REGISTRY }}
  AZURE_CLUSTER_NAME: ${{ inputs.AZURE_CLUSTER_NAME }}
  AZURE_RESOURCE_GROUP: ${{ inputs.AZURE_RESOURCE_GROUP }}
  DOCKER_CONTAINER_NAME: ${{ inputs.DOCKER_CONTAINER_NAME }}
  K8S_NAMESPACE: ${{ inputs.K8S_NAMESPACE }}

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # Set the target Azure Kubernetes Service (AKS) cluster.
      - name: Login Azure with SP and set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AZURE_CLUSTER_NAME }}
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}

      # Create namespace if doesn't exist
      - name: Create namespace
        run: |
          kubectl create namespace ${{ env.K8S_NAMESPACE }} --dry-run -o json | kubectl apply -f -

      # Create imagepullsecret for Azure Container registry (ACR)
      - name: Create image pull secret for ACR
        uses: azure/k8s-actions/k8s-create-secret@master
        with:
          container-registry-url: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io
          container-registry-username: ${{ secrets.ACR_USERNAME }}
          container-registry-password: ${{ secrets.ACR_PASSWORD }}
          namespace: ${{ env.K8S_NAMESPACE }}
          secret-name: ${{env.CLIENT}}-${{env.PROJECT}}-imagepullsecret-secret

