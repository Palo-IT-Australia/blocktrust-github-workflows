name: Continuous integration main

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      CLIENT:
        required: true
        type: string
      COMPANY:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      AZURE_CONTAINER_REGISTRY:
        required: true
        type: string
      AZURE_RESOURCE_GROUP:
        required: true
        type: string
      DOCKER_CONTAINER_NAME:
        required: true
        type: string
      REPO_WORKING_DIR:
        required: true
        type: string
    secrets:
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

env:
  CLIENT: ${{ inputs.CLIENT }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  COMPANY: ${{ inputs.COMPANY }}
  PROJECT: ${{ inputs.PROJECT }}
  AZURE_CONTAINER_REGISTRY: ${{ inputs.AZURE_CONTAINER_REGISTRY }}
  AZURE_RESOURCE_GROUP: ${{ inputs.AZURE_RESOURCE_GROUP }}
  DOCKER_CONTAINER_NAME: ${{ inputs.DOCKER_CONTAINER_NAME }}
  REPO_WORKING_DIR: ${{ inputs.REPO_WORKING_DIR }}

jobs:
  - name: Connect to ACR
    uses: azure/docker-login@v1
    with:
      login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
      username: ${{ secrets.ACR_USERNAME }}
      password: ${{ secrets.ACR_PASSWORD }}

  - name: Set up Docker Buildx
    uses: docker/setup-buildx-action@v2

  - name: Build and push
    uses: docker/build-push-action@v3
    with:
      context: ${{ env.REPO_WORKING_DIR }}
      push: true
      tags: |
        ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:${{ github.sha }}
        ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
      cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
      cache-to: type=inline
