name: Push app secret to kubernetes

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      CLIENT:
        required: true
        type: string
      COMPANY:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      AZURE_RESOURCE_GROUP:
        required: true
        type: string
      AZURE_CLUSTER_NAME:
        required: true
        type: string
      K8S_NAMESPACE:
        required: true
        type: string
      WORKING_DIR:
        required: true
        type: string
    secrets:
      AZURE_CREDENTIALS:
        required: true

env:
  CLIENT: ${{ inputs.CLIENT }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  COMPANY: ${{ inputs.COMPANY }}
  PROJECT: ${{ inputs.PROJECT }}
  AZURE_CLUSTER_NAME: ${{ inputs.AZURE_CLUSTER_NAME }}
  AZURE_RESOURCE_GROUP: ${{ inputs.AZURE_RESOURCE_GROUP }}
  K8S_NAMESPACE: ${{ inputs.K8S_NAMESPACE }}
  WORKING_DIR: ${{ inputs.WORKING_DIR }}

jobs:
  secrets:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Login Azure with SP and set AKS context
        uses: azure/aks-set-context@v1
        with:
          creds: '${{ secrets.AZURE_CREDENTIALS }}'
          cluster-name: ${{ env.AZURE_CLUSTER_NAME }}
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}

      # Add environement variable as secret in k8s
      - name: Create K8s secret from environment variable for ${{ env.PROJECT }}
        run: |
          kubectl delete secret ${{env.PROJECT}}-env -n=${{env.K8S_NAMESPACE}} --ignore-not-found;
          kubectl create secret generic ${{env.PROJECT}}-env \
            --from-env-file=${{env.WORKING_DIR}}/infra/env/.env.${{env.ENVIRONMENT}}.${{env.PROJECT}} \
            -n=${{env.K8S_NAMESPACE}}

