name: Continuous integration main

on:
  workflow_call:
    inputs:
      ENVIRONMENT:
        required: true
        type: string
      CLIENT:
        required: true
        type: string
      COMPANY:
        required: true
        type: string
      PROJECT:
        required: true
        type: string
      AZURE_CONTAINER_REGISTRY:
        required: true
        type: string
      AZURE_RESOURCE_GROUP:
        required: true
        type: string
      DOCKER_CONTAINER_NAME:
        required: true
        type: string
    secrets:
      ACR_USERNAME:
        required: true
      ACR_PASSWORD:
        required: true

env:
  CLIENT: ${{ inputs.CLIENT }}
  ENVIRONMENT: ${{ inputs.ENVIRONMENT }}
  COMPANY: ${{ inputs.COMPANY }}
  PROJECT: ${{ inputs.PROJECT }}
  AZURE_CONTAINER_REGISTRY: ${{ inputs.AZURE_CONTAINER_REGISTRY }}
  AZURE_RESOURCE_GROUP: ${{ inputs.AZURE_RESOURCE_GROUP }}
  DOCKER_CONTAINER_NAME: ${{ inputs.DOCKER_CONTAINER_NAME }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - if: ${{ steps.cache-npm.outputs.cache-hit == 'false' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Set env
        run: |
          cp "infra/env/.env.${{env.ENVIRONMENT}}.${{env.CLIENT}}" .env

      - name: Install package
        run: npm install
      - name: Run test
        run: npm run coverage
      - name: Build
        run: npm run build
        continue-on-error: true

      - name: Connect to ACR
        uses: azure/docker-login@v1
        with:
          login-server: ${{ env.REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:${{ github.sha }}
            ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
          cache-from: type=registry,ref=${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.DOCKER_CONTAINER_NAME }}:latest
          cache-to: type=inline
